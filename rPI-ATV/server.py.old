import re, sys
import BaseHTTPServer
import SimpleHTTPServer 
import SocketServer, logging, cgi
import media_db 
import atv_templates as templ


my_ip = '192.168.37.50'
my_ip = '172.29.3.104'
#my_ip = '172.17.1.78'

if sys.argv[1:]:
    port = int(sys.argv[1])
else:
    port = 8003
server_address = ('0.0.0.0', port)

db = media_db.media_db('media.db')


class ServerHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):

    def do_GET(self):
        #logging.error(self.headers)

        if self.path == '/favicon.ico':
            self.send_response(404)

        elif self.path.endswith("png") or self.path.endswith("jpg"):
            SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self)

        elif self.path == '/test.xml':
            self.send_response(200)
            self.send_header('Content-type', 'text/xml')

            item = db.get_item(1)
            my_content = templ.movie_item(item)
            self.send_header('content-length', len(my_content))
            self.end_headers()

            self.wfile.write(my_content)

        elif self.path == '/main.xml':
            self.send_response(200)
            self.send_header('Content-type', 'text/xml')
            my_content = templ.wrap_page(templ.navigation_bar())
            my_content = re.sub('__IP_ADDR__', my_ip, my_content)

            self.send_header('content-length', len(my_content))
            self.end_headers()

            self.wfile.write(my_content)

        elif self.path == '/grid':
            print self.path

        else:
            print 'E: %s' % self.path
            try:
                f = open("." + self.path)
                data = f.read()
                data = re.sub('__IP_ADDR__', my_ip, data)

                self.send_response(200)
                if self.path.endswith('xml') or self.path.endswith('plist'):
                    ct = 'application/xml'
                elif self.path.endswith('mc'):
                    ct = 'application/x-apple-aspen-config'
                elif self.path.endswith('js'):
                    ct = 'application/js'
                elif self.path.endswith('txt'):
                    ct = 'text/plain'
                elif self.path.endswith('css'):
                    ct = 'text/css'
                else:
                    ct = 'text/html'
                self.send_header('Content-type', ct)
                self.end_headers()
                self.wfile.write(data)
                f.close()

            except:
                self.send_response(404)


    def do_POST(self):
#        logging.error(self.headers)
        content_len = int(self.headers.getheader('content-length'))
        post_body = self.rfile.read(content_len)
        f = open("error.log", "a")
        f.write(post_body + "\n")
        f.close()
        #print post_body
        #for item in form.list:
        #    logging.error(item)
        #SimpleHTTPServer.SimpleHTTPRequestHandler.do_GET(self)

Handler = ServerHandler

httpd = SocketServer.TCPServer(server_address, Handler)

print "serving at port", port
httpd.serve_forever()

